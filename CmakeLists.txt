cmake_minimum_required(VERSION 3.16)
project(RenderdocBrownbag VERSION 1.0.0 LANGUAGES CXX)

# Set C++ standard
set(CMAKE_CXX_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_CXX_EXTENSIONS OFF)

# Define examples
set(EXAMPLES
    0_HelloTriangle
    1_VertexBuffer
)

# Option to build all examples (default: ON)
option(BUILD_ALL_EXAMPLES "Build all examples" ON)

# Option to select which example to build (used only if BUILD_ALL_EXAMPLES is OFF)
set(EXAMPLE "0_HelloTriangle" CACHE STRING "Example to build when BUILD_ALL_EXAMPLES is OFF")
set_property(CACHE EXAMPLE PROPERTY STRINGS ${EXAMPLES})

# Find Vulkan package
find_package(Vulkan REQUIRED)

# Add GLFW for window creation
include(FetchContent)
FetchContent_Declare(
    glfw
    GIT_REPOSITORY https://github.com/glfw/glfw.git
    GIT_TAG 3.3.8
)
set(GLFW_BUILD_DOCS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_TESTS OFF CACHE BOOL "" FORCE)
set(GLFW_BUILD_EXAMPLES OFF CACHE BOOL "" FORCE)
FetchContent_MakeAvailable(glfw)

# Add GLM for mathematics
FetchContent_Declare(
    glm
    GIT_REPOSITORY https://github.com/g-truc/glm.git
    GIT_TAG 0.9.9.8
)
FetchContent_MakeAvailable(glm)

# Set common source files
set(COMMON_SOURCES
    common/vulkan_app.cpp
)

# Set common header files
set(COMMON_HEADERS
    common/vulkan_app.h
)

# Create common library
add_library(vulkan_common STATIC ${COMMON_SOURCES} ${COMMON_HEADERS})

# Link common libraries
target_link_libraries(vulkan_common PUBLIC
    Vulkan::Vulkan
    glfw
    glm
)

# Include directories for common library
target_include_directories(vulkan_common PUBLIC
    ${CMAKE_CURRENT_SOURCE_DIR}/common
    ${Vulkan_INCLUDE_DIRS}
)

# Add compile definitions for common library
target_compile_definitions(vulkan_common PUBLIC
    VULKAN_HPP_DISPATCH_LOADER_DYNAMIC=1
)

# Function to add an example
function(add_example name)
    # Set source files for the example
    set(EXAMPLE_SOURCES
        examples/${name}/main.cpp
    )

    # Create executable
    add_executable(${name} ${EXAMPLE_SOURCES})

    # Link libraries
    target_link_libraries(${name} PRIVATE
        vulkan_common
    )

    # Include directories
    target_include_directories(${name} PRIVATE
        ${CMAKE_CURRENT_SOURCE_DIR}/examples/${name}
    )

    # Copy shader files to build directory
    file(COPY ${CMAKE_CURRENT_SOURCE_DIR}/examples/${name}/shaders DESTINATION ${CMAKE_CURRENT_BINARY_DIR}/bin)

    # Set output directory
    set_target_properties(${name} PROPERTIES
        RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin
    )
endfunction()

# Add examples based on configuration
if(BUILD_ALL_EXAMPLES)
    # Build all examples
    foreach(example ${EXAMPLES})
        add_example(${example})
        message(STATUS "Adding example: ${example}")
    endforeach()
    message(STATUS "Building all examples")
else()
    # Build only the selected example
    if(EXAMPLE IN_LIST EXAMPLES)
        add_example(${EXAMPLE})
        message(STATUS "Building example: ${EXAMPLE}")
    else()
        message(FATAL_ERROR "Unknown example: ${EXAMPLE}")
    endif()
endif()

# Print information
message(STATUS "Vulkan_FOUND: ${Vulkan_FOUND}")
message(STATUS "Vulkan_INCLUDE_DIRS: ${Vulkan_INCLUDE_DIRS}")
message(STATUS "Vulkan_LIBRARIES: ${Vulkan_LIBRARIES}")
